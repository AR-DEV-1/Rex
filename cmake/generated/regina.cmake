

# This file was automatically generated by "create_project.py"
# Command: generate_project(type project_name solution_folder project_folder pch_header_name = project_folder pch_src_name = project_folder)
# Example: generate_project(static CoreLibs 1_common core_libs)


# include path: ${CMAKE_SOURCE_DIR}/source/include/5_tools/regina
# src path: ${CMAKE_SOURCE_DIR}/source/src/5_tools/regina


# Project Name Project
# -------------------------
file(GLOB_RECURSE regina_LIBS_INC    ${CMAKE_SOURCE_DIR}/source/include/5_tools/regina/*.h)
file(GLOB_RECURSE regina_LIBS_SRC    ${CMAKE_SOURCE_DIR}/source/src/5_tools/regina/*.cpp)


# Create the project filters
GROUPSOURCES(${CMAKE_SOURCE_DIR}/source/include/5_tools/regina include)
GROUPSOURCES(${CMAKE_SOURCE_DIR}/source/src/5_tools/regina src)


# Create the project
add_executable(regina ${regina_LIBS_INC} ${regina_LIBS_SRC})


# Set the include directories
target_include_directories(regina PUBLIC ${CMAKE_SOURCE_DIR}/source/include/5_tools/regina)

# Set the link libraries
target_link_libraries(regina PUBLIC rex_application_core)

# Set project properties
set_target_properties(regina PROPERTIES FOLDER                                         	5_tools)   						# solution folder
set_target_properties(regina PROPERTIES DEFINE_SYMBOL                                  	"" )                     		# defines
set_target_properties(regina PROPERTIES DEBUG_POSTFIX 									${CMAKE_DEBUG_POSTFIX})			# debug post fix
IF(MSVC)
	set_target_properties(regina PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY               ${OUTPUT_BINDIR})        		# working directory
	set_target_properties(regina PROPERTIES ARCHIVE_OUTPUT_DIRECTORY 					${OUTPUT_BINDIR})				# output directory
    set_target_properties(regina PROPERTIES LIBRARY_OUTPUT_DIRECTORY 					${OUTPUT_BINDIR})				# output directory
    set_target_properties(regina PROPERTIES RUNTIME_OUTPUT_DIRECTORY 					${OUTPUT_BINDIR})				# output directory


	set_target_properties(regina PROPERTIES VS_GLOBAL_EnableUnitySupport                True)                    		# unit builds on visual studio
	set_target_properties(regina PROPERTIES VS_GLOBAL_IncludeInUnityFile                True)
	set_target_properties(regina PROPERTIES VS_GLOBAL_OrderInUnityFile                  100)
	set_target_properties(regina PROPERTIES VS_GLOBAL_CombineFilesOnlyFromTheSameFolder false)
	set_target_properties(regina PROPERTIES VS_GLOBAL_MinFilesInUnityFile               2)
	set_target_properties(regina PROPERTIES VS_GLOBAL_MaxFilesInUnityFile               0)
	set_target_properties(regina PROPERTIES VS_GLOBAL_MinUnityFiles                     1)
	set_target_properties(regina PROPERTIES VS_GLOBAL_UnityFilesDirectory               .)
ENDIF()

# Compiler options
IF(MSVC)
	target_compile_options(regina PRIVATE /W4 /WX /MP)
ENDIF()

# Set precompiled header
add_precompiled_header(regina "regina_pch.h" "regina_pch.cpp")