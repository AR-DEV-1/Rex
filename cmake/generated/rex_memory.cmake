

# This file was automatically generated by "create_project.py"
# Command: generate_project(type project_name solution_folder project_folder pch_header_name = project_folder pch_src_name = project_folder)
# Example: generate_project(static CoreLibs 1_common core_libs)


# include path: ${CMAKE_SOURCE_DIR}/source/include/1_engine/rex_memory
# src path: ${CMAKE_SOURCE_DIR}/source/src/1_engine/rex_memory


# Project Name Project
# -------------------------
file(GLOB_RECURSE rex_memory_LIBS_INC    ${CMAKE_SOURCE_DIR}/source/include/1_engine/rex_memory/*.h)
file(GLOB_RECURSE rex_memory_LIBS_SRC    ${CMAKE_SOURCE_DIR}/source/src/1_engine/rex_memory/*.cpp)


# Create the project filters
GROUPSOURCES(${CMAKE_SOURCE_DIR}/source/include/1_engine/rex_memory include)
GROUPSOURCES(${CMAKE_SOURCE_DIR}/source/src/1_engine/rex_memory src)


# Create the project
add_library(rex_memory STATIC ${rex_memory_LIBS_INC} ${rex_memory_LIBS_SRC})


# Set the include directories
target_include_directories(rex_memory PUBLIC ${CMAKE_SOURCE_DIR}/source/include/1_engine/rex_memory)


# Set project properties
set_target_properties(rex_memory PROPERTIES FOLDER                                         1_engine)   		# solution folder
set_target_properties(rex_memory PROPERTIES DEFINE_SYMBOL                                  "" )                     		# defines
IF(MSVC)
	set_target_properties(rex_memory PROPERTIES VS_DEBUGGER_WORKING_DIRECTORY                ${OUTPUT_BINDIR})        		# working directory
	set_target_properties(rex_memory PROPERTIES ARCHIVE_OUTPUT_DIRECTORY                     ${OUTPUT_BINDIR})        		# output directory
	set_target_properties(rex_memory PROPERTIES LIBRARY_OUTPUT_DIRECTORY                     ${OUTPUT_BINDIR})        		# output directory
	set_target_properties(rex_memory PROPERTIES RUNTIME_OUTPUT_DIRECTORY                     ${OUTPUT_BINDIR})        		# output directory


	set_target_properties(rex_memory PROPERTIES VS_GLOBAL_EnableUnitySupport                 True)                    		# unit builds on visual studio
	set_target_properties(rex_memory PROPERTIES VS_GLOBAL_IncludeInUnityFile                 True)
	set_target_properties(rex_memory PROPERTIES VS_GLOBAL_OrderInUnityFile                   100)
	set_target_properties(rex_memory PROPERTIES VS_GLOBAL_CombineFilesOnlyFromTheSameFolder  false)
	set_target_properties(rex_memory PROPERTIES VS_GLOBAL_MinFilesInUnityFile                2)
	set_target_properties(rex_memory PROPERTIES VS_GLOBAL_MaxFilesInUnityFile                0)
	set_target_properties(rex_memory PROPERTIES VS_GLOBAL_MinUnityFiles                      1)
	set_target_properties(rex_memory PROPERTIES VS_GLOBAL_UnityFilesDirectory                .)
ENDIF()


# Compiler options
IF(MSVC)
	target_compile_options(rex_memory PRIVATE /W4 /WX /MP)


ENDIF()
# Set precompiled header
add_precompiled_header(rex_memory "rex_memory_pch.h" "rex_memory_pch.cpp")